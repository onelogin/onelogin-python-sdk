# coding: utf-8

"""
    OneLogin API

    OpenAPI Specification for OneLogin  # noqa: E501

    The version of the OpenAPI document: 3.1.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.get_role_by_name200_response import GetRoleByName200Response  # noqa: E501
from openapi_client.rest import ApiException

class TestGetRoleByName200Response(unittest.TestCase):
    """GetRoleByName200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GetRoleByName200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetRoleByName200Response`
        """
        model = openapi_client.models.get_role_by_name200_response.GetRoleByName200Response()  # noqa: E501
        if include_optional :
            return GetRoleByName200Response(
                status = openapi_client.models.generate_token_400_response.generateToken_400_response(
                    error = False, 
                    code = 200, 
                    type = 'Success', 
                    message = 'Success', ), 
                pagination = openapi_client.models.get_role_by_name_200_response_pagination.getRoleByName_200_response_pagination(
                    after_cursor = 'xWNjb3VudF9pZDo6OjUzNDEzLS0jI2lkOjo6OTA0MjU3NTQ2', 
                    before_cursor = '""', 
                    next_link = 'https://{subdomain}.onelogin.com/api/1/events?after_cursor=xWNjb3VudF9pZDo6OjUzNDEzLS0jI2lkOjo6OTA0MjU3NTQ2', 
                    previous_link = '""', ), 
                data = [{"id":1111,"name":"C-Executive"},{"id":1112,"name":"Contractor"},{"id":1113,"name":"Default"},{"id":1114,"name":"Employee"}]
            )
        else :
            return GetRoleByName200Response(
        )
        """

    def testGetRoleByName200Response(self):
        """Test GetRoleByName200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    OneLogin API

    OpenAPI Specification for OneLogin  # noqa: E501

    The version of the OpenAPI document: 3.1.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.get_scopes200_response_inner_configuration import GetScopes200ResponseInnerConfiguration  # noqa: E501
from openapi_client.rest import ApiException

class TestGetScopes200ResponseInnerConfiguration(unittest.TestCase):
    """GetScopes200ResponseInnerConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GetScopes200ResponseInnerConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetScopes200ResponseInnerConfiguration`
        """
        model = openapi_client.models.get_scopes200_response_inner_configuration.GetScopes200ResponseInnerConfiguration()  # noqa: E501
        if include_optional :
            return GetScopes200ResponseInnerConfiguration(
                audiences = [
                    ''
                    ], 
                refresh_token_expiration_minutes = 30, 
                resource_identifier = 'https://example.com/contacts', 
                access_token_expiration_minutes = 20
            )
        else :
            return GetScopes200ResponseInnerConfiguration(
                audiences = [
                    ''
                    ],
                resource_identifier = 'https://example.com/contacts',
        )
        """

    def testGetScopes200ResponseInnerConfiguration(self):
        """Test GetScopes200ResponseInnerConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

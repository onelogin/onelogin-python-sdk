# coding: utf-8

"""
    OneLogin API

    OpenAPI Specification for OneLogin  # noqa: E501

    The version of the OpenAPI document: 3.1.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.create_message_template_request_template_one_of_all_of import CreateMessageTemplateRequestTemplateOneOfAllOf  # noqa: E501
from openapi_client.rest import ApiException

class TestCreateMessageTemplateRequestTemplateOneOfAllOf(unittest.TestCase):
    """CreateMessageTemplateRequestTemplateOneOfAllOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateMessageTemplateRequestTemplateOneOfAllOf
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateMessageTemplateRequestTemplateOneOfAllOf`
        """
        model = openapi_client.models.create_message_template_request_template_one_of_all_of.CreateMessageTemplateRequestTemplateOneOfAllOf()  # noqa: E501
        if include_optional :
            return CreateMessageTemplateRequestTemplateOneOfAllOf(
                subject = 'Email MFA App Verification Code', 
                html = '<html><head></head><body><p>Here is the code: {{otp_code}}</p></body></html>', 
                plain = 'Here is the code: {{otp_code}}'
            )
        else :
            return CreateMessageTemplateRequestTemplateOneOfAllOf(
                subject = 'Email MFA App Verification Code',
                html = '<html><head></head><body><p>Here is the code: {{otp_code}}</p></body></html>',
                plain = 'Here is the code: {{otp_code}}',
        )
        """

    def testCreateMessageTemplateRequestTemplateOneOfAllOf(self):
        """Test CreateMessageTemplateRequestTemplateOneOfAllOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
